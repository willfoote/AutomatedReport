Sub AnalyzeAllSheets()
    Dim ws As Worksheet
    Dim summarySheet As Worksheet
    Dim inputDate As String
    Dim targetDate As Date
    Dim dateFound As Boolean

    ' Prompt user for the date to analyze
    inputDate = InputBox("Enter the date to analyze (m/d/yyyy):", "Date Input")
    
    ' Convert input string to date
    On Error GoTo InvalidDate
    targetDate = CDate(inputDate)
    On Error GoTo 0

    ' Create summary sheet
    On Error Resume Next
    Set summarySheet = ThisWorkbook.Worksheets("Summary")
    On Error GoTo 0

    If summarySheet Is Nothing Then
        Set summarySheet = ThisWorkbook.Worksheets.Add
        summarySheet.Name = "Summary"
    Else
        summarySheet.Cells.Clear
    End If

    ' Initialize header rows for summary tables
    summarySheet.Cells(1, 1).Value = "Tab Name"
    summarySheet.Cells(1, 2).Value = "Max I1"
    summarySheet.Cells(1, 3).Value = "Max I2"
    summarySheet.Cells(1, 4).Value = "Max I3"

    summarySheet.Cells(1, 6).Value = "Tab Name"
    summarySheet.Cells(1, 7).Value = "Average I1"
    summarySheet.Cells(1, 8).Value = "Average I2"
    summarySheet.Cells(1, 9).Value = "Average I3"

    summarySheet.Cells(1, 11).Value = "Tab Name"
    summarySheet.Cells(1, 12).Value = "Max Total kW"

    summarySheet.Cells(1, 14).Value = "Tab Name"
    summarySheet.Cells(1, 15).Value = "Average Total kW"

    summarySheet.Cells(1, 17).Value = "Tab Name"
    summarySheet.Cells(1, 18).Value = "Monthly kWh"

    summarySheet.Cells(1, 20).Value = "Tab Name"
    summarySheet.Cells(1, 21).Value = "Average B"
    summarySheet.Cells(1, 22).Value = "Average C"
    summarySheet.Cells(1, 23).Value = "Average D"
    summarySheet.Cells(1, 24).Value = "Average E"

    ' Initialize summary row for each table
    Dim maxSummaryRow As Long: maxSummaryRow = 2
    Dim avgSummaryRow As Long: avgSummaryRow = 2
    Dim maxTotalSummaryRow As Long: maxTotalSummaryRow = 2
    Dim avgTotalSummaryRow As Long: avgTotalSummaryRow = 2
    Dim monthlyKwhSummaryRow As Long: monthlyKwhSummaryRow = 2
    Dim dailyAvgSummaryRow As Long: dailyAvgSummaryRow = 2

    For Each ws In ThisWorkbook.Worksheets
        If ws.Name <> "Summary" Then
            Call AnalyzeColumnData(ws, summarySheet, targetDate, dateFound, maxSummaryRow, avgSummaryRow, maxTotalSummaryRow, avgTotalSummaryRow, monthlyKwhSummaryRow, dailyAvgSummaryRow)
        End If
    Next ws

    If dateFound Then
        MsgBox "Data analysis complete on all sheets!", vbInformation
    Else
        MsgBox "Date not found in the dataset of any sheet.", vbExclamation
    End If
    Exit Sub

InvalidDate:
    MsgBox "Invalid date format. Please enter a date in m/d/yyyy format.", vbExclamation
End Sub

Sub AnalyzeColumnData(ws As Worksheet, summarySheet As Worksheet, targetDate As Date, ByRef dateFound As Boolean, _
                      ByRef maxSummaryRow As Long, ByRef avgSummaryRow As Long, _
                      ByRef maxTotalSummaryRow As Long, ByRef avgTotalSummaryRow As Long, _
                      ByRef monthlyKwhSummaryRow As Long, ByRef dailyAvgSummaryRow As Long)

    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, 2).End(xlUp).Row

    Dim maxI1 As Double, avgI1 As Double
    Dim maxI2 As Double, avgI2 As Double
    Dim maxI3 As Double, avgI3 As Double
    Dim maxTotalKW As Double, avgTotalKW As Double
    Dim firstTotalKWH As Double, lastTotalKWH As Double
    Dim sumI1 As Double, sumI2 As Double, sumI3 As Double, sumTotalKW As Double
    Dim sumB As Double, sumC As Double, sumD As Double, sumE As Double
    Dim countI1 As Long, countI2 As Long, countI3 As Long, countTotalKW As Long
    Dim countB As Long, countC As Long, countD As Long, countE As Long

    Dim i As Long

    ' Initialize variables
    maxI1 = -1E+307
    maxI2 = -1E+307
    maxI3 = -1E+307
    maxTotalKW = -1E+307
    firstTotalKWH = ws.Cells(2, 6).Value
    lastTotalKWH = ws.Cells(2, 6).Value

    sumI1 = 0
    sumI2 = 0
    sumI3 = 0
    sumTotalKW = 0

    sumB = 0
    sumC = 0
    sumD = 0
    sumE = 0

    countI1 = 0
    countI2 = 0
    countI3 = 0
    countTotalKW = 0

    countB = 0
    countC = 0
    countD = 0
    countE = 0

    ' Calculate max, sum, and count values
    For i = 2 To lastRow
        If IsNumeric(ws.Cells(i, 2).Value) Then
            If ws.Cells(i, 2).Value > maxI1 Then maxI1 = ws.Cells(i, 2).Value
            sumI1 = sumI1 + ws.Cells(i, 2).Value
            countI1 = countI1 + 1
        End If

        If IsNumeric(ws.Cells(i, 3).Value) Then
            If ws.Cells(i, 3).Value > maxI2 Then maxI2 = ws.Cells(i, 3).Value
            sumI2 = sumI2 + ws.Cells(i, 3).Value
            countI2 = countI2 + 1
        End If

        If IsNumeric(ws.Cells(i, 4).Value) Then
            If ws.Cells(i, 4).Value > maxI3 Then maxI3 = ws.Cells(i, 4).Value
            sumI3 = sumI3 + ws.Cells(i, 4).Value
            countI3 = countI3 + 1
        End If

        If IsNumeric(ws.Cells(i, 5).Value) Then
            If ws.Cells(i, 5).Value > maxTotalKW Then maxTotalKW = ws.Cells(i, 5).Value
            sumTotalKW = sumTotalKW + ws.Cells(i, 5).Value
            countTotalKW = countTotalKW + 1
        End If

        If IsNumeric(ws.Cells(i, 6).Value) Then
            lastTotalKWH = ws.Cells(i, 6).Value
        End If

        If IsDate(ws.Cells(i, 1).Value) Then
            If DateValue(ws.Cells(i, 1).Value) = targetDate Then
                dateFound = True
                If IsNumeric(ws.Cells(i, 2).Value) Then
                    sumB = sumB + ws.Cells(i, 2).Value
                    countB = countB + 1
                End If
                If IsNumeric(ws.Cells(i, 3).Value) Then
                    sumC = sumC + ws.Cells(i, 3).Value
                    countC = countC + 1
                End If
                If IsNumeric(ws.Cells(i, 4).Value) Then
                    sumD = sumD + ws.Cells(i, 4).Value
                    countD = countD + 1
                End If
                If IsNumeric(ws.Cells(i, 5).Value) Then
                    sumE = sumE + ws.Cells(i, 5).Value
                    countE = countE + 1
                End If
            End If
        End If
    Next i

    ' Calculate averages, avoiding division by zero
    If countI1 > 0 Then avgI1 = sumI1 / countI1
    If countI2 > 0 Then avgI2 = sumI2 / countI2
    If countI3 > 0 Then avgI3 = sumI3 / countI3
    If countTotalKW > 0 Then avgTotalKW = sumTotalKW / countTotalKW

    Dim avgB As Double, avgC As Double, avgD As Double, avgE As Double
    If countB > 0 Then avgB = sumB / countB
    If countC > 0 Then avgC = sumC / countC
    If countD > 0 Then avgD = sumD / countD
    If countE > 0 Then avgE = sumE / countE

    ' Output results to summary sheet
    With summarySheet
        ' Max I1, I2, I3
        .Cells(maxSummaryRow, 1).Value = ws.Name
        .Cells(maxSummaryRow, 2).Value = maxI1
        .Cells(maxSummaryRow, 3).Value = maxI2
        .Cells(maxSummaryRow, 4).Value = maxI3
        maxSummaryRow = maxSummaryRow + 1

        ' Average I1, I2, I3
        .Cells(avgSummaryRow, 6).Value = ws.Name
        .Cells(avgSummaryRow, 7).Value = avgI1
        .Cells(avgSummaryRow, 8).Value = avgI2
        .Cells(avgSummaryRow, 9).Value = avgI3
        avgSummaryRow = avgSummaryRow + 1

        ' Max Total kW
        .Cells(maxTotalSummaryRow, 11).Value = ws.Name
        .Cells(maxTotalSummaryRow, 12).Value = maxTotalKW
        maxTotalSummaryRow = maxTotalSummaryRow + 1

        ' Average Total kW
        .Cells(avgTotalSummaryRow, 14).Value = ws.Name
        .Cells(avgTotalSummaryRow, 15).Value = avgTotalKW
        avgTotalSummaryRow = avgTotalSummaryRow + 1

        ' Monthly kWh
        .Cells(monthlyKwhSummaryRow, 17).Value = ws.Name
        .Cells(monthlyKwhSummaryRow, 18).Value = Abs(lastTotalKWH - firstTotalKWH)
        monthlyKwhSummaryRow = monthlyKwhSummaryRow + 1

        ' Average B, C, D, E
        .Cells(dailyAvgSummaryRow, 20).Value = ws.Name
        .Cells(dailyAvgSummaryRow, 21).Value = avgB
        .Cells(dailyAvgSummaryRow, 22).Value = avgC
        .Cells(dailyAvgSummaryRow, 23).Value = avgD
        .Cells(dailyAvgSummaryRow, 24).Value = avgE
        dailyAvgSummaryRow = dailyAvgSummaryRow + 1
    End With
End Sub
